(function(l,c){typeof exports=="object"&&typeof module<"u"?module.exports=c():typeof define=="function"&&define.amd?define(c):(l=typeof globalThis<"u"?globalThis:l||self,l["experiment-vanilla-sdk"]=c())})(this,function(){"use strict";const l=()=>document.cookie.split("; ").reduce((h,t)=>{const[e,r]=t.split("=");return h[e]=r,h},{}),c=h=>{var t;return(t=l())==null?void 0:t[h]},g={visitors:"v2/visitors",flags:"v3/experiment/flags",events:"v2/experiment/events"},f={get:"GET",post:"POST"},i={flags:null,events:null};class u{static get API_URL(){return"https://www-services.lusha.com"}static get visitorId(){return c("_vid_")}static logger(t="error",...e){console[t](`[ExperimentVanillaSDK:${t}]`,...e)}static get shouldSetCache(){return!(i!=null&&i.flags)||!(i!=null&&i.events)}static async callService(t,e,r={}){let a=null;try{const n=`${this.API_URL}/${e}`,s={method:t.toUpperCase(),credentials:"include",headers:{"Content-Type":"application/json"}};t!=="GET"&&r&&(s.body=JSON.stringify(r));const o=await fetch(n,s);if(o.ok)try{a=await o.json()}catch{a=!0}else throw new Error(`Request failed with status ${o.status}`)}catch(n){this.logger("error","failed to callService",n)}finally{return a}}static async setCache(){try{this.logger("debug","going to fetch cache files");const[t,e]=await Promise.allSettled([fetch("https://ab-cache.lusha.com/status.json"),fetch("https://ab-cache.lusha.com/events.json")]);(t==null?void 0:t.status)==="fulfilled"&&(i.flags=await t.value.json()),(e==null?void 0:e.status)==="fulfilled"&&(i.events=await e.value.json())}catch{this.logger("error","failed to set cache")}}static async preCondition(){this.shouldSetCache&&await this.setCache()}static async getVisitorId(){if(this.visitorId)return this.logger("debug",`returning existing visitor id ${this.visitorId}`),this.visitorId;{this.logger("debug","calling get visitor id");const t=await this.callService(f.get,g.visitors);if(t!=null&&t.visitorId)return this.logger("debug",`visitor id = ${t.visitorId}`),t.visitorId}}static async loadFlag(t,e,r="visitorId",a={},n={}){var s,o;try{if(await this.preCondition(),((o=(s=i.flags)==null?void 0:s[e])==null?void 0:o.status)!=="active"){this.logger("warn",`flag ${e} is inactive / not exist`);return}const d={flags:[{key:e,project:t,bucketBy:r,options:a}],attributes:n},v=await this.callService(f.post,g.flags,d);return v==null?void 0:v[e]}catch(d){this.logger("error","failed to load flags",d)}return null}static async reportEvent(t,e,r={}){var a,n;try{if(await this.preCondition(),(n=(a=i.events)==null?void 0:a[e])!=null&&n.status){this.logger("warn",`event ${e} is inactive / not exist / not associated with any active flag`);return}const s={key:e,project:t,attributes:r};await this.callService(f.post,g.events,s)}catch(s){this.logger("error","failed to report experiment event",s)}return null}}return u.shouldSetCache&&u.setCache().then(null).catch(null),window.ExperimentVanillaSDK=u,u});
